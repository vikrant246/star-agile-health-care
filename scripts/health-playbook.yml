- hosts: all
  become: true
  tasks:
    - name: setting hostname
      command: sudo hostnamectl set-hostname kubemaster
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
    - name: Install Docker
      apt:
        name: docker-ce
        state: present
    - name: Start Docker service
      service:
        name: docker
        state: started
    - name: installing kubernates
      command: sudo apt-get update
    - name: step1
      command: sudo apt-get install -y apt-transport-https ca-certificates curl gpg
    - name: step2
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: step3
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' |
        sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: step4
      command: sudo apt-get update
    - name: step5
      command: sudo apt-get install -y kubelet kubeadm kubectl
    - name: starting kubelet
      command: sudo  systemctl start kubelet
    - name: enabling kubelet
      command: sudo systemctl enable kubelet
    - name: restarting containerd
      command: sudo rm -f /etc/containerd/config.toml
    - name: restarting containerd2
      command: sudo systemctl restart containerd
    - name: inislizaing kubeadm
      command: kubeadm init --pod-network-cidr=10.10.0.0/16 --ignore-preflight-errors=all
    - name: create .kube directory
      command: mkdir -p $HOME/.kube
    - name: copy admin.conf to user's kube config
      command: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    - name: changing ownership
      command: sudo chown $(id -u):$(id -g) $HOME/.kube/config
    - name: creating networking layer
      command: curl https://raw.githubusercontent.com/projectcalico/calico/v3.27.3/manifests/calico.yaml -O
    - name: networking step2
      command: kubectl apply -f calico.yaml
    - name: untaint master node
      command: kubectl taint node <master-node> node-role.kubernetes.io/control-plane:NoSchedule-
